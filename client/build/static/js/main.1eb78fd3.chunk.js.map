{"version":3,"sources":["components/FormStyle.module.css","components/Header.module.css","components/AddFiles.module.css","components/Profile.module.css","components/Header.jsx","components/AddFiles.jsx","components/TextMessage.jsx","components/ClientsList.jsx","components/Form.jsx","components/Login.jsx","components/Registration.jsx","components/Profile.jsx","components/App.jsx","index.js"],"names":["module","exports","success","fail","error","container","wrapper","logRegWrapper","formLogReg","form","submit","field","checkboxes","text","input","email","client","search","header","title","buttons","button","icon","file","fileLabel","uploaded","greeting","info","Header","state","login","JSON","parse","sessionStorage","getItem","_this","props","handleExit","setState","getLogin","this","react_default","a","createElement","className","styles","react_router_dom","to","onClick","Component","AddFiles","files","handleFileChange","e","filename","filesArray","target","_loop","i","name","$","append","fReader","FileReader","readAsDataURL","onloadend","event","src","result","push","path","length","nextProps","nextState","nextContext","getFiles","htmlFor","index_es","faFileAlt","multiple","onChange","type","id","faFileImage","accept","TextMessage","handleTextChange","value","componentWillUpdate","getMessage","message","arrClients","ClientsList","selectedClients","searchText","handleSelect","check","index","indexOf","splice","getClients","console","log","handleSearch","_this2","clients","placeholder","map","emailArray","emails","split","key","RegExp","Form","userName","userEmail","successfully","handleSend","_callee","response","body","parsed","regenerator_default","wrap","_context","prev","next","preventDefault","fetch","method","headers","Content-Type","stringify","attachments","sent","clearForm","document","getElementById","reset","stop","join","then","res","json","callAPI","encType","onSubmit","ClientsList_ClientsList","TextMessage_TextMessage","AddFiles_AddFiles","disabled","Login","loginEmail","loginPassword","getInfo","handleEmailChange","handlePasswordChange","handleLogin","password","prevProps","prevState","snapshot","setItem","username","userExist","handleRegistration","Profile","_this$props$user","user","App","react_router","render","Header_Header","exact","Form_Form","Login_Login","isLogin","Profile_Profile","component","Registration","ReactDOM","App_App"],"mappings":"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","file":"static/js/main.1eb78fd3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"success\":\"FormStyle_success__2yvCy\",\"fail\":\"FormStyle_fail__EOGuz\",\"error\":\"FormStyle_error__1Cwg5\",\"container\":\"FormStyle_container__AJhVG\",\"wrapper\":\"FormStyle_wrapper__2hHCl\",\"logRegWrapper\":\"FormStyle_logRegWrapper__2HUOT\",\"formLogReg\":\"FormStyle_formLogReg__1m61H\",\"form\":\"FormStyle_form__3tQ_y\",\"submit\":\"FormStyle_submit__2Gkng\",\"field\":\"FormStyle_field__2bO8x\",\"checkboxes\":\"FormStyle_checkboxes__2G5cZ\",\"text\":\"FormStyle_text__3J3ql\",\"input\":\"FormStyle_input__3m2x9\",\"email\":\"FormStyle_email__3UDo_\",\"client\":\"FormStyle_client__FfXxk\",\"search\":\"FormStyle_search__2Gibr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2OKZO\",\"title\":\"Header_title__nV9xx\",\"buttons\":\"Header_buttons__1imOf\",\"button\":\"Header_button__2YW_Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"AddFiles_field__2XxT4\",\"icon\":\"AddFiles_icon__3Oed9\",\"file\":\"AddFiles_file__3nuRp\",\"fileLabel\":\"AddFiles_fileLabel__1Lopp\",\"uploaded\":\"AddFiles_uploaded__2gmTD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"Profile_greeting__1pGpf\",\"info\":\"Profile_info__2TraM\",\"email\":\"Profile_email__3uZ1t\"};","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport styles from './Header.module.css';\r\n\r\nexport  default class Header extends Component {\r\n    state = {\r\n        login: JSON.parse(sessionStorage.getItem('login')) || this.props.login\r\n    };\r\n\r\n    handleExit = () => {\r\n        this.setState({ login: false });\r\n        this.props.getLogin(this.state.login);\r\n    };\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     sessionStorage.setItem('login', JSON.stringify(this.state.login));\r\n    // }\r\n\r\n    render() {\r\n        const { login } = this.props;\r\n\r\n        return (\r\n            <header className={styles.header}>\r\n                <h1 className={styles.title}>SEND EMAIL</h1>\r\n                <div className={styles.buttons}>\r\n                    {\r\n                        login\r\n                            ? <div>\r\n                                <Link to='/login'\r\n                                      className={styles.button}\r\n                                      onClick={this.handleExit}\r\n                                >\r\n                                    Exit\r\n                                </Link>\r\n                                <Link to='/profile' className={styles.button}>Profile</Link>\r\n                            </div>\r\n\r\n\r\n                            : <div>\r\n                                <Link to='/registration' className={styles.button}>Sign up</Link>\r\n                                <Link to='/login' className={styles.button}>Log in</Link>\r\n                            </div>\r\n                    }\r\n\r\n                    <Link to='/' className={styles.button}>Send email</Link>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport $ from \"jquery\";\r\n\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faFileAlt, faFileImage} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport styles from \"./AddFiles.module.css\";\r\n\r\nexport default class AddFiles extends Component {\r\n    state = {\r\n        files: []\r\n    };\r\n\r\n    handleFileChange = (e) => {\r\n        let filename;\r\n        let filesArray = [];\r\n        const files = e.target.files;\r\n\r\n        for(let i = 0; i < files.length; i++){\r\n            let file = files[i];\r\n            filename = file.name;\r\n            $('#uploaded').append(filename + ' ');\r\n\r\n            let fReader = new FileReader();\r\n            fReader.readAsDataURL(file);\r\n            fReader.onloadend = function(event) {\r\n                file.src = event.target.result;\r\n                filesArray.push({ filename: filename, path: file.src });\r\n            };\r\n        }\r\n\r\n        this.setState({ files: filesArray });\r\n    };\r\n\r\n    componentWillUpdate(nextProps, nextState, nextContext) {\r\n        if (nextState !== this.state) {\r\n            this.props.getFiles(nextState.files);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.field}>\r\n                <label htmlFor=\"file\" className={styles.fileLabel} title=\"Add file\">\r\n                    <FontAwesomeIcon icon={faFileAlt} className={styles.icon} />\r\n                </label>\r\n                <input multiple\r\n                       onChange={this.handleFileChange}\r\n                       type=\"file\"\r\n                       id=\"file\"\r\n                       className={styles.file}\r\n                />\r\n\r\n                <label htmlFor=\"img\" className={styles.fileLabel} title=\"Add image\">\r\n                    <FontAwesomeIcon icon={faFileImage} className={styles.icon} />\r\n                </label>\r\n                <input multiple\r\n                       onChange={this.handleFileChange}\r\n                       accept=\"image/*, video/*\"\r\n                       type=\"file\"\r\n                       id=\"img\"\r\n                       className={styles.file}\r\n                />\r\n\r\n                <span id=\"uploaded\" className={styles.uploaded} />\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nimport styles from \"./FormStyle.module.css\";\r\n\r\nexport default class TextMessage extends Component {\r\n    state = {\r\n        text: ''\r\n    };\r\n\r\n    handleTextChange = (e) => {\r\n        this.setState({\r\n            text: e.target.value\r\n        });\r\n    };\r\n\r\n    componentWillUpdate = (nextProps, nextState) => {\r\n        if (nextState !== this.state) {\r\n            this.props.getMessage(nextState.text);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <span className={styles.field}>Message text</span>\r\n                <label htmlFor=\"message-text\" />\r\n                <textarea id=\"message-text\"\r\n                          className={styles.text}\r\n                          value={this.props.message}\r\n                          onChange={this.handleTextChange}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport styles from \"./FormStyle.module.css\";\r\n\r\nlet arrClients = [];\r\n\r\nexport default class ClientsList extends Component {\r\n    state = {\r\n        selectedClients: [],\r\n        searchText: ''\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        this.setState({ selectedClients: arrClients });\r\n    }\r\n\r\n    handleSelect = (e) => {\r\n        if (e.target.check === 'true') {\r\n            let index = arrClients.indexOf(e.target.value);\r\n\r\n            e.target.check = 'false';\r\n\r\n            if (index !== -1) {\r\n                arrClients.splice(index, 1);\r\n            }\r\n        } else {\r\n            e.target.check = 'true';\r\n            arrClients.push(e.target.value);\r\n        }\r\n\r\n        this.props.getClients(this.state.selectedClients);\r\n\r\n        console.log(this.state.selectedClients)\r\n    };\r\n\r\n    handleSearch = (e) => {\r\n        this.setState({ searchText: e.target.value });\r\n    };\r\n\r\n    render() {\r\n        const { clients } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <span className={styles.field}>Select clients</span>\r\n\r\n                <input type='text'\r\n                       className={styles.search}\r\n                       placeholder='Search...'\r\n                       value={this.state.searchText}\r\n                       onChange={this.handleSearch}\r\n                />\r\n\r\n                <div className={styles.checkboxes} id='checkboxes'>\r\n                    {\r\n                        clients.map(client => {\r\n                            const emailArray = client.emails.split(', ');\r\n\r\n                            return (\r\n                                <div key={client.id}>\r\n                                    {\r\n                                        client.name.search(new RegExp('' + this.state.searchText + '', 'i')) !== -1 &&\r\n                                        <div className={styles.client}>\r\n                                            <div>{client.name}</div>\r\n                                            {\r\n                                                emailArray.map(email =>\r\n                                                    <div className={styles.email} key={email}>\r\n                                                        <input type='checkbox'\r\n                                                               id={client.id}\r\n                                                               check=\"false\"\r\n                                                               value={email}\r\n                                                               onClick={this.handleSelect}\r\n                                                        />\r\n                                                        <label htmlFor={client.id}>{email}</label>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport AddFiles from './AddFiles.jsx';\r\nimport TextMessage from './TextMessage.jsx';\r\nimport ClientsList from './ClientsList.jsx';\r\n\r\nimport styles from './FormStyle.module.css';\r\n\r\nexport default class Form extends Component {\r\n    state = {\r\n        userName: '',\r\n        userEmail: '',\r\n        emails: '',\r\n        message: '',\r\n        files: [],\r\n        clients: [],\r\n        successfully: '',\r\n        error: ''\r\n    };\r\n\r\n    callAPI() {\r\n        fetch(\"http://localhost:9000/clients\")\r\n            .then(res => res.json())\r\n            .then(res => this.setState({ clients: res }));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.callAPI();\r\n    }\r\n\r\n    handleSend = async e => {\r\n        e.preventDefault();\r\n\r\n        let response = await fetch('http://localhost:9000/send', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                message: this.state.message,\r\n                emails: this.state.emails,\r\n                userName: this.state.userName,\r\n                userEmail: this.state.userEmail,\r\n                attachments: this.state.files\r\n            })\r\n        });\r\n\r\n        const body = await response.text();\r\n        const parsed = JSON.parse(body);\r\n\r\n        this.setState({ successfully: parsed.successfully, error: parsed.error, clearForm: parsed.clearForm });\r\n\r\n        if (this.state.clearForm) {\r\n            this.setState({\r\n                message: ''\r\n            });\r\n            document.getElementById('form').reset();\r\n        }\r\n    };\r\n\r\n    getClients = value => {\r\n        this.setState({ emails: value.join(', ') });\r\n        this.setState({ userName: this.props.userName, userEmail: this.props.userEmail });\r\n    };\r\n\r\n    getMessage = value => {\r\n        this.setState({ message: value });\r\n    };\r\n\r\n    getFiles = value => {\r\n        this.setState({ files: value });\r\n    };\r\n\r\n    render() {\r\n        const { login } = this.props;\r\n\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className={styles.wrapper}>\r\n                    <form className={styles.form}\r\n                          encType=\"multipart/form-data\"\r\n                          onSubmit={this.handleSend}\r\n                          id='form'\r\n                    >\r\n                        <ClientsList clients={this.state.clients} getClients={this.getClients} />\r\n                        <TextMessage getMessage={this.getMessage} message={this.state.message} />\r\n                        <AddFiles getFiles={this.getFiles} />\r\n\r\n                        {\r\n                            login\r\n                                ? <input type=\"submit\" className={styles.submit} value=\"Submit\" />\r\n                                : <div>\r\n                                    <input type=\"submit\" className={styles.submit} value=\"Submit\" disabled />\r\n                                    <span className={styles.error}>PLEASE, LOG IN TO CONTINUE</span>\r\n                                </div>\r\n                        }\r\n                        <p className={styles.success}>{this.state.successfully}</p>\r\n                        <p className={styles.fail}>{this.state.error}</p>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport styles from \"./FormStyle.module.css\";\r\n\r\nexport default class Login extends Component {\r\n    state = {\r\n        loginEmail: '',\r\n        loginPassword: '',\r\n        login: JSON.parse(sessionStorage.getItem('login')) || false,\r\n        name: '',\r\n        email: '',\r\n        error: ''\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        sessionStorage.setItem('login', JSON.stringify(this.state.login));\r\n        sessionStorage.setItem('name', JSON.stringify(this.state.name));\r\n        sessionStorage.setItem('email', JSON.stringify(this.state.email));\r\n    }\r\n\r\n    componentWillUpdate = (nextProps, nextState) => {\r\n        if (nextState !== this.state) {\r\n            this.props.getInfo(nextState.login, nextState.name, nextState.email);\r\n        }\r\n    };\r\n\r\n    handleEmailChange = e => {\r\n        this.setState({\r\n            loginEmail: e.target.value\r\n        });\r\n    };\r\n\r\n    handlePasswordChange = e => {\r\n        this.setState({\r\n            loginPassword: e.target.value\r\n        });\r\n    };\r\n\r\n    handleLogin = async e => {\r\n        e.preventDefault();\r\n\r\n        let response = await fetch('http://localhost:9000/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: this.state.loginEmail,\r\n                password: this.state.loginPassword\r\n            })\r\n        });\r\n\r\n        const body = await response.text();\r\n        const parsed = JSON.parse(body);\r\n\r\n        this.setState({ login: parsed.login, name: parsed.name, email: parsed.email, error: parsed.error });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className={styles.logRegWrapper}>\r\n                    <form className={styles.formLogReg}\r\n                          onSubmit={this.handleLogin}\r\n                    >\r\n                        <div className={styles.field}>Email:</div>\r\n                        <input type='email'\r\n                               id='email'\r\n                               value={this.state.loginEmail}\r\n                               className={styles.input}\r\n                               onChange={this.handleEmailChange}\r\n                        />\r\n\r\n                        <div className={styles.field}>Password:</div>\r\n                        <input type='password'\r\n                               id='password'\r\n                               value={this.state.loginPassword}\r\n                               className={styles.input}\r\n                               onChange={this.handlePasswordChange}\r\n                        />\r\n\r\n                        <p className={styles.error}>{this.state.error}</p>\r\n\r\n                        <input type=\"submit\" className={styles.submit} value=\"Log in\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport styles from \"./FormStyle.module.css\";\r\n\r\nexport default class Login extends Component {\r\n    state = {\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        userExist: ''\r\n    };\r\n\r\n    handleTextChange = (e) => {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    };\r\n\r\n    handleEmailChange = (e) => {\r\n        this.setState({\r\n            email: e.target.value\r\n        });\r\n    };\r\n\r\n    handlePasswordChange = (e) => {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    };\r\n\r\n    handleRegistration = async e => {\r\n        e.preventDefault();\r\n\r\n        let response = await fetch('http://localhost:9000/registration', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username: this.state.username,\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            })\r\n        });\r\n\r\n        const body = await response.text();\r\n\r\n        this.setState({ userExist: JSON.parse(body)});\r\n\r\n        if (this.state.userExist.clearForm) {\r\n            this.setState({\r\n                username: '',\r\n                email: '',\r\n                password: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className={styles.logRegWrapper}>\r\n                    <form className={styles.formLogReg}\r\n                          onSubmit={this.handleRegistration}\r\n                    >\r\n                        <div className={styles.field}>Username:</div>\r\n                        <p className={styles.error}>{this.state.userExist.name}</p>\r\n                        <input type='text'\r\n                               name='username'\r\n                               className={styles.input}\r\n                               onChange={this.handleTextChange}\r\n                               value={this.state.username}\r\n                        />\r\n\r\n                        <div className={styles.field}>Email:</div>\r\n                        <p className={styles.error}>{this.state.userExist.email}</p>\r\n                        <input type='email'\r\n                               name='email'\r\n                               className={styles.input}\r\n                               onChange={this.handleEmailChange}\r\n                               value={this.state.email}\r\n                        />\r\n\r\n                        <div className={styles.field}>Password:</div>\r\n                        <input type='password'\r\n                               name='password'\r\n                               className={styles.input}\r\n                               onChange={this.handlePasswordChange}\r\n                               value={this.state.password}\r\n                        />\r\n\r\n                        <input type=\"submit\" className={styles.submit} value=\"Sign up\" />\r\n                        <p className={styles.success}>{this.state.userExist.message}</p>\r\n                        <p className={styles.fail}>{this.state.userExist.error}</p>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport styles from './Profile.module.css';\r\n\r\nexport  default class Profile extends Component {\r\n    render() {\r\n        const { name , email } = this.props.user;\r\n\r\n        return (\r\n            <div>\r\n                <h1 className={styles.greeting}>Hello, {name}</h1>\r\n                <p className={styles.info}>All emails will be sent from</p>\r\n                <p className={styles.email}>{email}</p>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\r\n\r\nimport Header from './Header.jsx';\r\nimport Form from './Form.jsx';\r\nimport Login from './Login.jsx';\r\nimport Registration from './Registration.jsx';\r\nimport Profile from './Profile.jsx';\r\n\r\n export  default class App extends Component {\r\n     state = {\r\n         login: JSON.parse(sessionStorage.getItem('login')) || false,\r\n         name: JSON.parse(sessionStorage.getItem('name')) || '',\r\n         email: JSON.parse(sessionStorage.getItem('email')) || ''\r\n     };\r\n\r\n     componentDidUpdate(prevProps, prevState, snapshot) {\r\n         sessionStorage.setItem('login', JSON.stringify(this.state.login));\r\n     }\r\n\r\n     getInfo = (login, name, email) => {\r\n         this.setState({ login: login, name: name, email: email });\r\n     };\r\n\r\n     getLogin = login => {\r\n         this.setState({ login: login });\r\n     };\r\n\r\n    render() {\r\n        const { login } = this.state;\r\n\r\n        return (\r\n            <BrowserRouter>\r\n                <Route path='/' render={() => <Header login={login} getLogin={this.getLogin} />} />\r\n                <Route exact path='/' render={() => <Form login={login} userName={this.state.name} userEmail={this.state.email} />\r\n                }/>\r\n                <Route exact path='/login' render={() =>\r\n                    login\r\n                        ? <Redirect to='/profile' />\r\n                        : <Login isLogin={login} getInfo={this.getInfo} />\r\n                }/>\r\n                <Route exact path='/profile' render={() =>\r\n                    login\r\n                        ? <Profile user={this.state} />\r\n                        : <Redirect to='/login' />\r\n                }/>\r\n                <Route exact path='/registration' component={Registration} />\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App.jsx';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}